version: '3'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-volumes:/data/db
  application:
    build: .
    container_name: app-container
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
    env_file:
      - .env  # 本番環境用
    tty: true

  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor"
    ports:
      - "8001:8080"
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8002:8080"
    volumes:
      - ./documentation/schema:/schema
      - ./documentation/openapi.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml
  swagger-api:
    image: stoplight/prism:3
    container_name: "swagger-api"
    ports:
      - "8003:4010"
    command: mock -h 0.0.0.0 /openapi.yaml
    volumes:
      - ./documentation/schema:/schema
      - ./documentation/openapi.yaml:/openapi.yaml
  minio:
    container_name: minio
    command: ['server', '/data', '--console-address', ':9001']
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminpass
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio_data:/data
    restart: unless-stopped
  mc:
    image: minio/mc
    container_name: mc
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "adminpass"
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 admin adminpass;
      mc mb myminio/sample;
      mc cp init_data/* myminio/sample;
      "
    volumes:
      - ./init_data:/init_data