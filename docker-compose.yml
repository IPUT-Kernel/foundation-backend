version: '3'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-volumes:/data/db

  application:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: app-container
    ports:
      - "4000:4000"
      - "5555:5555"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
      - postgres
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://bitcat:test@postgres:5432/iput-kernel?schema=public
    tty: true

  swagger-editor:
    image: swaggerapi/swagger-editor
    container_name: "swagger-editor"
    ports:
      - "8001:8080"

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8002:8080"
    volumes:
      - ./documentation/schema:/schema
      - ./documentation/openapi.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml

  swagger-api:
    image: stoplight/prism:3
    container_name: "swagger-api"
    ports:
      - "8003:4010"
    command: mock -h 0.0.0.0 /openapi.yaml
    volumes:
      - ./documentation/schema:/schema
      - ./documentation/openapi.yaml:/openapi.yaml

  minio:
    container_name: minio
    command: ['server', '/data', '--console-address', ':9001']
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=adminpass
    image: quay.io/minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./minio_data:/data
    restart: unless-stopped

  mc:
    image: minio/mc
    container_name: mc
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
    entrypoint: >
      /bin/sh -c "
      mc alias set iput-kernel http://minio:9000 admin password;
      mc mb iput-kernel/subjectName-data-csv;
      mc mb iput-kernel/teacher-data-csv;
      mc mb iput-kernel/class-data-csv;
      mc mb iput-kernel/room-data-csv;
      mc mb iput-kernel/air-data-csv;
      mc cp init_data/subjectName/* iput-kernel/subjectName-data-csv;
      mc cp init_data/room/* iput-kernel/room-data-csv;
      mc cp init_data/class/* iput-kernel/class-data-csv;
      mc cp init_data/air/* iput-kernel/air-data-csv;
      "
    volumes:
      - ./init_data:/init_data

  influxdb:
    image: influxdb:2.7.1
    container_name: influxdb-local
    volumes:
      - ./docker/influxdb2/data:/var/lib/influxdb2
      - ./docker/influxdb2/config:/etc/influxdb2
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=iput-kernel
      - DOCKER_INFLUXDB_INIT_BUCKET=bucket
  
  grafana:
    image: grafana/grafana-oss:9.5.5
    container_name: grafana-local
    ports:
      - 8085:3000
    user: "472"
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
    depends_on:
      - influxdb
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:8085
      - GF_SECURITY_ADMIN_PASSWORD=admin

  postgres:
    image: postgres:latest
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: iput-kernel
      POSTGRES_USER: bitcat
      POSTGRES_PASSWORD: test
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres-data: